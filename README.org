* zwm

X11 tiling window manager built in Zig.

** Developing

Run window manager with ~Xephyr~:

#+begin_src bash
# Launch a Xephyr window with DISPLAY set to :1
Xephyr -br -ac -noreset -screen 800x600 :1

# Launch wm on the new display
DISPLAY=:1 zig-out/bin/zwm
#+end_src

** Tasks

*** TODO Consider becoming non-reparenting

May make things much simpler, and we probably don't need any window decorations
anyways

*** TODO Implement basic tiling

When a new window is created, we need to loop through all existing windows and
update their sizes and locations.

We want to support different auto-tiling strategies, but we'll start with a
simple column stacking one (one main window, column to right of other windows).

#+begin_src zig
const ColumnLayout = struct {

};

// Global state
const layout_state = layout.columnLayout();
const windows: []*c.Window = undefined;

fn applyLayout(state: anytype, windows: []*c.Window) void {
    if (!@hasDecl(@TypeOf(state), "tile")) @compileError("State needs a \"tile\" function.");

  const root_geo = util.getGeometry(wm.display, wm.root);
    const configs = state.measureTiles(windows.len);
    for (configs) |config, i| {
        const window = windows[i];
        const geo = util.getGeometry(wm.display, window);
        geo.configureWindow(window, .{
            .x = root_geo.x + config.x,
            .y = root_geo.y + config.y,
            .width = config.width,
            .height = config.height,
        });
    }
}
#+end_src
